
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
     gzip on;
     gzip_disable "MSIE [1-6]\.(?!.*SV1)";
     gzip_vary on;
     gzip_types text/plain text/css text/javascript application/javascript application/x-javascript;


    server {

#         listen       80;
#         server_name  ucalendar.cn;
#         #charset koi8-r;
#
#         #access_log  logs/host.access.log  main;
#
#         location / {
#             root   html;
#             index  index.html index.htm;
#             try_files $uri $uri/ /index.html;
#         }
#         location /api/ {
#             proxy_pass   http://121.199.1.247:8888/;
#         }
#         #error_page  404              /404.html;
#
#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


#     HTTPS server

    server {
       listen       443 ssl;
       server_name  ucalendar.cn;

       ssl_certificate      cert/9611257_ucalendar.cn.pem;
       ssl_certificate_key  cert/9611257_ucalendar.cn.key;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
       ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
       ssl_prefer_server_ciphers  on;

       location / {
           root   html;
           index  index.html index.htm;
           try_files $uri $uri/ /index.html;
       }

        location /api/ {
            proxy_pass   http://121.199.1.247:8888/;
        }

    }

    server {
           listen       443 ssl;
           server_name  me.ucalendar.cn;

           ssl_certificate      cert/me/10152340_me.ucalendar.cn.pem;
           ssl_certificate_key  cert/me/10152340_me.ucalendar.cn.key;

           ssl_session_cache    shared:SSL:1m;
           ssl_session_timeout  5m;

           ssl_ciphers  HIGH:!aNULL:!MD5;
           #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
           ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
           ssl_prefer_server_ciphers  on;

           location / {
               proxy_pass http://127.0.0.1:3000;
           }
    }

    server {
               listen       443 ssl;
               server_name  three.ucalendar.cn;

               ssl_certificate      cert/three/three.ucalendar.cn.pem;
               ssl_certificate_key  cert/three/three.ucalendar.cn.key;

               ssl_session_cache    shared:SSL:1m;
               ssl_session_timeout  5m;

               ssl_ciphers  HIGH:!aNULL:!MD5;
               #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
               ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
               ssl_prefer_server_ciphers  on;

#
#
#     gzip on;
#     # 压缩级别： 1-9。5 是推荐的压缩级别，Default: 1
#       gzip_comp_level 5;
# #       gzip 压缩文件体积的最小值。如果文件已经足够小了，
# # 就不需要压缩了，因为即便压缩了，效果也不明显，而且会占用 CPU 资源
#       gzip_min_length 1k;
# #       设置用于压缩响应的 number 和 size 的缓冲区。
# # 默认情况下，缓冲区大小等于一个内存页。根据平台的不同，它也可以是4K或8K
#       gzip_buffers 4 16k;
# #       是否开启对代理资源的压缩。
# # 很多时候，nginx 会作为反向代理服务器，实际的静态资源在上有服务器上，
# # 只有开启了 gzip_proxied 才会对代理的资源进行压缩。Default: off
#       gzip_proxied any;
# #       每当客户端的 Accept-Encoding-capabilities 头发生变化时，
# # 告诉代理缓存 gzip 和常规版本的资源。
# # 避免了不支持 gzip 的客户端（这在今天极为罕见）
# # 在代理给它们 gzip 版本时显示乱码的问题
#       gzip_vary on;
# #       压缩文件的 MIME 类型。`text/html` 默认就会开启 gzip 压缩
#       gzip_types
#         application/javascript
#         application/x-javascript
#         text/javascript
#         text/css
#         text/xml
#         application/xhtml+xml
#         application/xml
#         application/atom+xml
#         application/rdf+xml
#         application/rss+xml
#         application/geo+json
#         application/json
#         application/ld+json
#         application/manifest+json
#         application/x-web-app-manifest+json
#         image/svg+xml
#         text/x-cross-domain-policy;
# #         服务器开启对静态文件（ CSS, JS, HTML, SVG, ICS, and JSON）的压缩。
#       gzip_static on;
# #       IE6 以下的浏览器禁用 gzip 压缩
#       gzip_disable "MSIE [1-6]\.";

               location / {
                   root   threejs;
                   index  index.html index.htm;
                   try_files $uri $uri/ /index.html;
               }
    }

}
